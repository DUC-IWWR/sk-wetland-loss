---
title: "Modelling Wetland Loss in Saskatchewan"
format: html
---

## Introduction

The purpose of this report is to demonstrate the modelled loss of wetlands in Saskatchewan,
based on GIS data collected by the CWI. This will then be compared to drainage data collected by WSA.

## Data Exploration

Let us first explore the data. Here we will focus on the data generated by the CWI and stratified by 
virtual basin. Let's take a look at some histograms and potential relationships to investigate.

### Distribution of Drain Lengths and Numbers of Drains
```{r}
#| echo: false
targets::tar_load(vb_db)
```
Let's first take a look at the distribution of drain lengths and the distribution of the number of drains. 
Note here that I am only looking at virtual basins where the drain lengths are greater than 0, or the 
number of drains are greater than 0. That is, we aren't considering undrained virtual basins. This 
also gets rid of incomplete data.

We will also look to see if there is a relationship between number of drains and the length of drains 
per virtual basin. We would likely expect to see a positive relationship (i.e., more drains implies 
more length of drain per virtual basin).
 
```{r}
#| echo: false
targets::tar_load(combined_drains_plot)
print(combined_drains_plot)
```

We can see a fairly clear relationship between the number of drains and the length of drains per virtual basin. 
In fact, we find a correlation of `r cor(vb_db$sum_Length, vb_db$Polyline_C)`. With this in 
mind, we can probabl be confident that we can use either of these two variables in a model as they are effectively 
telling the same story.

### Distribution of Drained Area by CWI Class

Let us now take a look at the distribution of drained area by CWI class. For this, I will present the distribution 
of percent drained virtual basin for classes 1 and 5. This is because the virtual basins are of different sizes, 
and so we should expect to see more drainage in larger basins. So, taking the percent drained per basin 
standardizes the drainage.

Here are the percent drainage for CWI classes 1 and 5:
```{r}
#| echo: false
targets::tar_load(combined_class_drainage_plot)
print(combined_class_drainage_plot)
```

Across the virtual basins for which we have data, we find a total drained area of 
`r round(sum(vb_db$CWI_1, na.rm = TRUE) + sum(vb_db$CWI_5, na.rm = TRUE), 2)`km^2, which comprises a total of 
`r round(((sum(vb_db$CWI_1, na.rm = TRUE) + sum(vb_db$CWI_5, na.rm = TRUE)) / sum(vb_db$CWI_Total, na.rm = TRUE)) * 100 ,2)`%.

### Does number of drains correlate with drainage?

One thing that we might be interested in is whether the number of drains in a virtual 
basin correlates with the drainage in that basin. We would expect this to be the case,
in that we should see a positive relationship. If so, we may be able to use this relationship
in a larger model to estimate how much drainage we are missing in each virtual basin.

Let us plot this relationship:


```{r}
#| echo: false
targets::tar_load(drains_vs_drainage_plot)
print(drains_vs_drainage_plot)
```

### Does landcover class explain variation in drainage?

Let us now have a look at the variation in both number of drains and drained area as it pertains to landcover class. We will use boxplots for this:

```{r}
#| echo: false
targets::tar_load(combined_boxplots)
print(combined_boxplots)
```

### Spatial Distribution of Drainage

Let's take a look at how the drainage varies in space. This will allow us to see if there are any hotspots (or coldspots) of drainage that are not
necessarily influenced by the number of drainage ditches. 

First, let us see the spatial distribution of the number of drains per square kilometer in each VB, recalling
that the number of drains can be used as a proxy for length of drains. We will plot this side by side
with the percent drained wetlands at each virtual basin (grey areas denote NA):

```{r}
#| echo: false
targets::tar_load(combined_spatial_plot)
print(combined_spatial_plot)
```

### Exploration of the WSA Data

Let's now take a look at the data that has been used in the WSA analysis for wetland drainage amount. This is for the objective looking 
at “what does WSA think current intactness levels are, what might actual levels be, and what does that mean for potential to miss the 
retention targets in the future”. Note that for this purpose, the CWI impacts we lump into “intact” or “drained” categories will be 
different than for the other exercise. Here we will consider CWI classes 1, 4, and 5 to be drained and 0, 2, and 3 to be intact.

Because we are interested in current intactness levels according to WSA, let us examine the % intactness for each planning unit in the following table:

```{r}
#| echo: false
targets::tar_load(wsa_data_wide)
wsa_data_wide$Percent_Intact <- round((rowSums(wsa_data_wide[, c(3,5,7)], na.rm = TRUE) / rowSums(wsa_data_wide[,3:8], na.rm = TRUE)) * 100, 2)
print(wsa_data_wide[, c("Name", "Percent_Intact")])
```

## Modelling Drainage to Quantify Uncertainty

Let us now attempt to create some models! Since I am modelling percent drainage as a response variable, I am going to use *beta regression*, which allows for a response variable to be in the range of 0 to 1. One downside of beta regression is that the response cannot be exactly 0 or exactly 1, and so I have added a very small number onto any 0s that exist in the data. 

I will test a few models here, but ultimately I am interested in a "full" model that we can use to predict values of drainage in each virtual basin.

Let us start with a Null model, where we do not have any covariates. Here is the Stan summary for the Null model:

```{r}
#| echo: false
targets::tar_load(model_summary_null)
print(model_summary_null) 
```

And now here is the Stan summary for the model that relates number of drains to drainage:

```{r}
#| echo: false
targets::tar_load(model_summary_n_drains)
print(model_summary_n_drains)
```

Stan summary for the model that relates drainage to WSA:
```{r}
#| echo: false
targets::tar_load(model_summary_wsa)
print(model_summary_wsa, n = nrow(model_summary_wsa))
```

Stan summary for the model that relates drainage to landcover class
```{r}
#| echo: false
targets::tar_load(model_summary_lcc)
print(model_summary_lcc, n = nrow(model_summary_lcc))
```

Now let's start getting into richer models. This is a model that has the slope for the number of drains, plus effects for landcover class and WSA planning units:
```{r}
#| echo: false
targets::tar_load(model_summary_full)
print(model_summary_full)
```

Let's use this last model to come up with some estimated uncertainty for each of the virtual basins. By using the parameter estimates from above, we can come up with predicted values of drainage for each virtual basin based on its WSA planning unit, landcover type, and number of drains in the virtual basin.

Here is the predicted drainage map:
```{r}
#| echo: false
targets::tar_load(drainage_plot_predicted)
print(drainage_plot_predicted)
```

This seems to match up reasonably okay with the observed drainage in some areas, but in other areas it seems to underestimate drainage. These seem to be the areas where we saw high drainage but low number of drains. I will proceed with the analysis for now, but keep in the back of our heads that we should consider adding in an explicit spatial effect that can "override" the effects of disproportionate number of drains. 

Now, here is an uncertainty map, based on the variables in the model. With this, I will map out the *width of the 90% credible intervals* for each virtual basin, such that the larger the width, the LESS uncertain we are of the drainage in that area.
```{r}
#| echo: false
targets::tar_load(drainage_plot_uncertainty)
print(drainage_plot_uncertainty)
```

Unsurprisingly, we see areas where we are most certain of the drainage and areas we are less certain of the drainage.

Finally, let us come up with a total estimated drainage on the landscape and add uncertainty on to that. I will use the predicted drainage rates from the model to generate total wetland area drained per virtual basin, then sum those wetland areas and divide by the entire wetland area to get an overall drainage on this landscape. I will then do the same for the 5% quantile and the 95% quantile, to get a range of overall drainage.

```{r}
#| echo: false
targets::tar_load(y_pred)
targets::tar_load(vb_db)

estimated_total_drainage <- sum(vb_db$CWI_Total * y_pred$mean)
percent_total_drainage <- estimated_total_drainage / sum(vb_db$CWI_Total) * 100

lower_total_drainage <- sum(vb_db$CWI_Total * y_pred$q5)
percent_lower_drainage <- lower_total_drainage / sum(vb_db$CWI_Total) * 100

upper_total_drainage <- sum(vb_db$CWI_Total * y_pred$q95)
percent_upper_drainage <- upper_total_drainage / sum(vb_db$CWI_Total) * 100

print(paste0("Mean Estimated Drainage: ", round(estimated_total_drainage,2), " km^2, ", round(percent_total_drainage,2), "%"))

print(paste0("Lower 5% Estimated Drainage: ", round(lower_total_drainage,2), " km^2, ", round(percent_lower_drainage,2), "%"))

print(paste0("Upper 95% Estimated Drainage: ", round(upper_total_drainage,2), " km^2, ", round(percent_upper_drainage,2), "%"))
```

Effectively what the model is telling us is that overall wetland drainage on this landscape could range anywhere from 1.48% upward to 37.24%, with an estimated drainage of approximately 13.04%. It is useful to note that our model predicts an approximately similar amount of drainage that was estimated by previous analyses that used CWI data, but because we are bringing in other sources of data (e.g., drainage ditch mapping, virtual basins, etc.), we can generate an uncertainty around this number.